/*Imports the Google Fonts used in website - all pages that link to the shared.css file will be able to use these fonts*/
@import url('https://fonts.googleapis.com/css2?family=Anton&family=Montserrat:wght@400;700&family=Roboto:wght@100;400;900&display=swap');

/*Universal selector - selects every element in our code (note - this selects evey element, it does not use inheritance) */
*{
  /*When setting the width & height of an element tells the browser to include padding & margin in the calculation - browser default is box-sizing: content-box; which does not include padding & margin when calculating width & heigh of an element*/
  box-sizing: border-box;
}

/*Applies styling to the <body> of our code (uses inheritance - elements inherit style) - font-family should be applied to the <body> not using the universial selector * */
body{
  font-family:'Montserrat', sans-serif;
  margin: 0;
  /*Turns <body> into a container element for the CSS grid*/
  display: grid;
  /*Adds rows to the grid - 1st row = 3.5rem (header/nav bar is out of the regular document flow (due to position: fixed;) and cant be included in the grid, therefore we create a new blank row to make space for it, otherwise it will overlap content in <main>), 2nd row height = auto (this is for <main>), 3rd row = fit-content(8rem) (this is for footer, will be 8rem minimum or if needed will expand just enough to fit the content) */
  grid-template-rows: 3.5rem auto fit-content(8rem);
  /*Assigns names to columns, rows and cells - "header" = 1st row (not used), "main" = 2nd row, "footer" = 3rd row*/
  grid-template-areas:  "header"
                        "main"
                        "footer";
}

main{
  /*Puts the content in <main> into the grid area with a name of "main" - starts and ends inside of this named area*/
  grid-area: main;
}

.backdrop{
  position: fixed;
  display: none;
  /*Set position to top: 0; left: 0; to fix margin collpasing issue when applying a backdrop*/
  top: 0;
  left: 0;
  z-index: 100;
  width: 100vw;
  height: 100vh;
  background: rgba(0,0,0,0.5);
}

.main-header{
  /*100% of the viewport - when position: fixed; is applied the containing element is the viewport*/
  width: 100%;
  /*Fixes the nav bar to the top of the screen - takes it out of the normal document flow */
  position: fixed;
  top: 0;
  left: 0;
  background: #2ddf5c;
  padding: 0.5rem 1rem;
  z-index: 60;
  /*Turns element into a flex container - all child elements become flex itmes*/
  display: flex;
  /*Positions elements along the cross axis (vertically)*/
  align-items: center;
  /*Positions logo to the far left and buttons to the far right of the nav bar - positions elements to the start or end of the main axis*/
  justify-content: space-between;
}

.toggle-button {
  width: 3rem;
  background: transparent;
  border: none;
  cursor: pointer;
  padding-top: 0;
  padding-bottom: 0;
  vertical-align: middle;
}

.toggle-button:focus {
  outline: none;
}

.toggle-button__bar {
  width: 100%;
  height: 0.2rem;
  background: black;
  display: block;
  margin: 0.6rem 0;
}

.main-header__brand{
  color: #0e4f1f;
  text-decoration: none;
  font-weight: bold;
}

.main-header__brand img{
  /*Makes logo image heigh 100% of its container - see .main-header__brand for height */
  height: 2.5rem;
  vertical-align: middle;
}

.main-nav{
  display: none;
}

.main-nav__items{
  margin: 0;
  padding: 0;
  /*Removes bullets & styling for <li>*/
  list-style: none;
  display: flex;
}

.main-nav__item{
  margin: 0 1rem;
}

.main-nav__item a,
.mobile-nav__item a{
  text-decoration: none;
  color: #0e4f1f;
  font-weight: bold;
  padding: 0.2rem 0;
}

/*pseudo-class styles the state of an element (e.g. :hover()) or selects something specific (e.g. nth-child( )) */
.main-nav__item a:hover,
.main-nav__item a:active{
 color: white;
 border-bottom: 5px solid white;
}

.main-nav__item--cta a,
.mobile-nav__item--cta a{
  color: white;
  background: #ff1b68;
  padding: 0.5rem 1rem;
  border-radius: 8px;
}

.main-nav__item--cta a:hover,
.main-nav__item--cta a:active,
.mobile-nav__item--cta a:hover,
.mobile-nav__item--cta a:active{
  color: #ff1b68;
  background: white;
  border: none;
}

@media(min-width: 40rem){
  .toggle-button{
    display: none;
  }
  .main-nav{
    display: flex;
  }
}

.main-footer{
  background: black;
  padding: 2rem;
  margin-top: 3rem;
  /*Puts the footer into the grid area with a name of "footer" - starts and ends inside of this named area*/
  grid-area: footer;
}

.main-footer__links{
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.main-footer__link{
  margin: 0.5rem 0;
}

.main-footer__link a{
  color: white;
  text-decoration: none;
}

.main-footer__link a:hover,
.main-footer__link a:active{
  color: #ccc;
}

.mobile-nav {
  display: none;
  position: fixed;
  z-index: 101;
  top: 0;
  left: 0;
  background: white;
  width: 80%;
  height: 100vh;
}

.mobile-nav__items {
  width: 90%;
  height: 100%;
  list-style: none;
  margin: 0 auto;
  padding: 0;
  /*Turns element into a flex container - all elements (nav bar buttons) inside become flex items*/
  display: flex;
  /*Displays items in mobile nav bar vertically - flips both axis, main axis goes from top left to bottom left, cross axis goes from top left to top right*/
  flex-direction: column;
  /*Centers child elements vertically along the main axis*/
  justify-content: center;
  /*Centers child elements horizontally along the cross axis*/
  align-items: center;
}

.mobile-nav__item {
  margin: 1rem 0;
}

.mobile-nav__item a {
  font-size: 1.5rem;
}

.button{
    background: #0e4f1f;
    color: white;
    /*Prioritises/overrides the inherit font family over the browser default*/
    font: inherit;
    border: 1.5px solid #0e4f1f;
    padding: 0.5rem;
    border-radius: 8px;
    font-weight: bold;
    cursor: pointer;
}

/*Applies button styling on state :hover and :active (when mouse pressed down)*/
.button:hover,
.button:active{
  background: white;
  color: #0e4f1f;
}

.button:focus{
  /*Removes the outline when a user focuses on a button (i.e. when button is in focus state)*/
  outline: none;
}

/*Applies styling to elements with a class of button AND has the attribute disabled*/
.button[disabled]{
  cursor: not-allowed;
  border: #a1a1a1;
  background: #ccc;
  color: #a1a1a1;
}

.open{
  display: block !important;
}

@media (min-width: 40rem){
  .main-footer__link{
    margin: 0 1rem;
  }
  .main-footer__links{
    /*Displays elements in footer (flex items) in a row - main axis goes from left to right, and elements are aligned along the main axis*/
    flex-direction: row;
    /*Centers child elements vertically along the main axis*/
    justify-content: center;
  }
}
